<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/Type-on-Strap/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/Type-on-Strap/" rel="alternate" type="text/html" /><updated>2024-08-23T14:24:54+09:00</updated><id>http://localhost:4000/Type-on-Strap/feed.xml</id><title type="html">Type on Strap</title><subtitle>A website with blog posts and pages</subtitle><entry><title type="html">[JAVA] 클래스</title><link href="http://localhost:4000/Type-on-Strap/java/2024/08/22/java-class.html" rel="alternate" type="text/html" title="[JAVA] 클래스" /><published>2024-08-22T00:00:00+09:00</published><updated>2024-08-22T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/java/2024/08/22/java-class</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/java/2024/08/22/java-class.html"><![CDATA[<h2 id="1-객체-지향-프로그래밍">1. 객체 지향 프로그래밍</h2>

<ul>
  <li>
    <p>객체 지향 프로그래밍 : 부품에 해당하는 객체들을 먼저 만들고, 이 객체들을 하나씩 조립해서 완성된 프로그램을 만드는 기법</p>
  </li>
  <li>
    <p>객체 : 물리적으로 존재하거나 개념적인 것 중에서 다른 것과 식별 가능한 것</p>

    <blockquote>
      <p>속성 - 필드(ex. 이름, 나이 등)<br />
동작 - 메소드(ex. 웃다, 걷다 등)</p>
    </blockquote>
  </li>
  <li>
    <p>객체 모델링 : 현실 세계의 객체를 소프트웨어 객체로 설계하는 것</p>
  </li>
  <li>
    <p>객체의 상호작용</p>

    <ul>
      <li>객체들 사이의 상호작용 수단은 ‘메소드’</li>
      <li>메소드 호출 -&gt; 실행 결과 리턴</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">메소드</span><span class="o">(</span><span class="n">매개값1</span><span class="o">,</span> <span class="n">매개값2</span><span class="o">,</span> <span class="o">...);</span>

<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">add</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>

</code></pre></div>    </div>
  </li>
  <li>
    <p>객체 간의 관계 : 집합 관계, 사용 관계, 상속 관계</p>
  </li>
  <li>
    <p>객체 지향 프로그래밍의 특징</p>
    <ul>
      <li>캡슐화 : 보호한다는 뜻, 데이터와 동작을 하나로 묶고 실제 구현 내용을 외부에 감추는 것(<em>접근 제한자</em> 사용)</li>
      <li>상속
        <ul>
          <li>부모 객체는 자신의 필드와 메소드를 자식 객체에게 물려주어 사용할 수 있도록 함(코드의 재사용성, 유지보수 시간 최소화)</li>
          <li>여러 자식 객체 생성 가능 - 부모 객체에서 변경된 내용을 그대로 물려받음</li>
        </ul>
      </li>
      <li>다형성 : 사용 방법은 동일하지만 실행 결과가 다양하게 나오는 성질(<em>자동 타입 변환과 재정의 기술</em> 필요)</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="2-객체와-클래스">2. 객체와 클래스</h2>

<ul>
  <li>
    <p>클래스 : 객체를 생성하기 위한 설계도</p>
  </li>
  <li>
    <p>인스턴스 : 클래스로부터 생성된 객체(과정 - 인스턴스화)</p>
  </li>
</ul>

<hr />

<h2 id="3-클래스-선언">3. 클래스 선언</h2>

<ul>
  <li>클래스 선언 : 어떻게 객체를 생성하고, 객체가 가져야 할 데이터가 무엇이고, 객체의 동작은 무엇인지를 정의 = 소스 파일명과 동일</li>
</ul>

<p>[클래스명.java]</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//클래스 선언</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">클래스명</span> <span class="o">{</span>
<span class="o">}</span>
</code></pre></div></div>

<p>※ 클래스명 : 숫자 시작 X, 영어 대문자 시작, $ _ 사용 가능<br />
※ 하나의 소스 파일에 복수 개의 클래스를 선언할 때는 소스 파일명과 동일한 클래스만 공개 클래스로 선언 가능</p>

<hr />

<h2 id="4-객체-생성과-클래스-변수">4. 객체 생성과 클래스 변수</h2>

<p>[객체 생성]</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">클래스</span> <span class="n">변수</span> <span class="o">=</span> <span class="k">new</span> <span class="n">클래스</span><span class="o">();</span>
</code></pre></div></div>

<ul>
  <li>클래스의 두 가지 용도
    <ul>
      <li>라이브러리 클래스 : 다른 클래스에서 이용하는 클래스</li>
      <li>실행 클래스 : main() 메소드를 가지고 있는 실행 가능한 클래스</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="5-클래스의-구성-멤버">5. 클래스의 구성 멤버</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClassName</span> <span class="o">{</span>
  <span class="c1">//필드 선언 : 객체의 데이터 저장</span>
  <span class="kt">int</span> <span class="n">fieldName</span><span class="o">;</span>

  <span class="c1">//생성자 : 객체 생성 시 초기화 역할 담당</span>
  <span class="nc">ClassName</span><span class="o">()</span> <span class="o">{...}</span>

  <span class="c1">//메소드 : 객체의 동작으로 호출 시 실행하는 블록</span>
  <span class="kt">int</span> <span class="nf">methodName</span><span class="o">()</span> <span class="o">{...}</span>
<span class="o">}</span>
</code></pre></div></div>

<hr />

<h2 id="6-필드-선언과-사용">6. 필드 선언과 사용</h2>

<ul>
  <li>객체 데이터 : 고유 데이터, 현재 상태 데이터, 부품 데이터</li>
</ul>

<p>[필드 선언]</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">타입</span> <span class="n">필드명</span> <span class="o">[</span> <span class="o">=</span> <span class="n">초기값</span> <span class="o">];</span>
</code></pre></div></div>

<ul>
  <li>필드와 (로컬)변수의 차이점
    <ul>
      <li>변수 : 생성자와 메소드 블록에서 선언, 생성자와 메소드 호출 시에만 존재하며 블록 내부에서 사용 가능</li>
      <li>필드 : 클래스 블록에서 선언, 객체 내부에 존재하며 객체 내외부 어디든 사용 가능</li>
    </ul>
  </li>
</ul>

<p>[필드 선언 예시]</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Car</span> <span class="o">{</span>
  <span class="nc">String</span> <span class="n">model</span> <span class="o">=</span> <span class="s">"그랜저"</span><span class="o">;</span>  <span class="c1">//고유 데이터 필드 - 기본값 null</span>
  <span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">300</span><span class="o">;</span>          <span class="c1">//상태 데이터 필드 - 기본값 0</span>
  <span class="kt">boolean</span> <span class="n">start</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>     <span class="c1">//상태 데이터 필드 - 기본값 false</span>
  <span class="nc">Tire</span> <span class="n">tire</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tire</span><span class="o">();</span>   <span class="c1">//부품 객체 필드 - 기본값 null</span>
<span class="o">}</span>
</code></pre></div></div>

<hr />

<h2 id="7-생성자-선언과-호출">7. 생성자 선언과 호출</h2>

<ul>
  <li>
    <p>생성자 선언 : 클래스에 개발자가 선언한 생성자가 있다면 컴파일러는 기본 생성자를 추가하지 않음</p>
  </li>
  <li>
    <p>필드 초기화 : 객체마다 동일한 값을 가지고 있다면 필드 선언 시 초기값을 대입하는 것이 좋고, 객체마다 다른 값을 가져야 한다면 생성자에서 필드를 초기화하는 것이 좋음</p>
  </li>
  <li>
    <p>생성자 오버로딩 : 매개변수를 달리하는 생성자를 여러 개 선언</p>
  </li>
</ul>]]></content><author><name></name></author><category term="JAVA" /><category term="JAVA" /><summary type="html"><![CDATA[1. 객체 지향 프로그래밍]]></summary></entry><entry><title type="html">Tech Stuff example</title><link href="http://localhost:4000/Type-on-Strap/2019/11/02/Tech-stuff-example.html" rel="alternate" type="text/html" title="Tech Stuff example" /><published>2019-11-02T00:00:00+09:00</published><updated>2019-11-02T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/2019/11/02/Tech-stuff-example</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/2019/11/02/Tech-stuff-example.html"><![CDATA[<p>Let’s demo some code snippet, with some mermaid diagrams.
Because if you put some code in your blog, you would at least make it:</p>
<ol>
  <li>Searchable</li>
  <li>Good-looking</li>
</ol>

<h2 id="search-on-code">Search on code</h2>

<p>Search should be working even for complicated escape symbols.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/\"hostname\"\:.*$/\"hostname\"\: \"'</span><span class="nv">$IPADDR</span><span class="s1">'\"\,/g'</span> open-falcon/agent/config/cfg.json
</code></pre></div></div>

<p>Or try searching for partial of a command, like this article should be returned when looking for “find grep”</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /etc <span class="nt">-type</span> f <span class="nt">-exec</span> <span class="nb">cat</span> <span class="s1">'{}'</span> <span class="se">\;</span> | <span class="nb">tr</span> <span class="nt">-c</span> <span class="s1">'.[:digit:]'</span> <span class="s1">'\n'</span> | <span class="nb">grep</span> <span class="s1">'^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'</span>
</code></pre></div></div>

<h2 id="code-highlighting-examples">Code highlighting examples</h2>

<p>Because you might put code in your blog post, and you want to make sure it will look good in here. Plus that the search
function will still be working!</p>

<h3 id="xml">XML</h3>

<p>Example from <a href="https://www.w3.org/standards/xml/core">W3C</a></p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;part</span> <span class="na">number=</span><span class="s">"1976"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;name&gt;</span>Windscreen Wiper<span class="nt">&lt;/name&gt;</span>
  <span class="nt">&lt;description&gt;</span>The Windscreen wiper
    automatically removes rain
    from your windscreen, if it
    should happen to splash there.
    It has a rubber <span class="nt">&lt;ref</span> <span class="na">part=</span><span class="s">"1977"</span><span class="nt">&gt;</span>blade<span class="nt">&lt;/ref&gt;</span>
    which can be ordered separately
    if you need to replace it.
  <span class="nt">&lt;/description&gt;</span>
<span class="nt">&lt;/part&gt;</span>
</code></pre></div></div>

<h3 id="java">Java</h3>

<p>java example</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="nd">@Example</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Demo</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONSTANT</span> <span class="o">=</span> <span class="s">"String"</span><span class="o">;</span>
  <span class="kd">private</span> <span class="nc">Object</span> <span class="n">o</span><span class="o">;</span>
  <span class="cm">/**
   * Creates a new demo.
   * @param o The object to demonstrate.
   */</span>
  <span class="kd">public</span> <span class="nf">Demo</span><span class="o">(</span><span class="nc">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">o</span> <span class="o">=</span> <span class="n">o</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">o</span> <span class="o">:</span> <span class="k">new</span> <span class="nc">Object</span><span class="o">();</span>
    <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="no">CONSTANT</span> <span class="o">+</span> <span class="s">"Other example of text"</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">123</span> <span class="o">-</span> <span class="mi">33</span> <span class="o">%</span> <span class="mi">11</span><span class="o">;</span>
  <span class="o">}</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">Demo</span> <span class="n">demo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Demo</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">demo</span><span class="o">.</span><span class="na">o</span><span class="o">.</span><span class="na">toString</span><span class="o">())</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="javascript">Javascript</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Does a thing
 */</span>
<span class="kd">function</span> <span class="nf">helloWorld</span><span class="p">(</span><span class="nx">param1</span><span class="p">,</span> <span class="nx">param2</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">example</span> <span class="o">=</span> <span class="s2">`hello </span><span class="p">${</span><span class="nx">param1</span><span class="p">}</span><span class="s2">`</span>
    <span class="kd">var</span> <span class="nx">something</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">key</span><span class="p">:</span> <span class="dl">"</span><span class="s2">value</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">number</span><span class="p">:</span> <span class="mi">1</span>
    <span class="p">};</span>

    <span class="c1">// Do something</span>
    <span class="k">if </span><span class="p">(</span><span class="mf">2.0</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="nx">something</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello, world!</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// TODO comment</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="json">JSON</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"animals"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"tiger"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"tiger"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"images"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"🐯"</span><span class="p">,</span><span class="w"> </span><span class="s2">"🐅"</span><span class="p">,</span><span class="w"> </span><span class="s2">"⻁"</span><span class="p">]</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"turtle"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"age"</span><span class="p">:</span><span class="w"> </span><span class="mi">126</span><span class="p">,</span><span class="w">
      </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"🐢"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"unicorn"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"doesExist"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
      </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"🦄"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="python">Python</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>


<span class="k">def</span> <span class="nf">some_function</span><span class="p">(</span><span class="n">param_one</span><span class="o">=</span><span class="sh">""</span><span class="p">,</span> <span class="n">param_two</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
    <span class="sa">r</span><span class="sh">'''</span><span class="s">A docstring</span><span class="sh">'''</span>
    <span class="k">if</span> <span class="n">param_one</span> <span class="o">&gt;</span> <span class="n">param_two</span><span class="p">:</span>  <span class="c1"># interesting
</span>        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Greater</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">return </span><span class="p">(</span><span class="n">param_two</span> <span class="o">-</span> <span class="n">param_one</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="mb">0b10</span><span class="p">)</span> <span class="ow">or</span> <span class="bp">None</span>


<span class="k">class</span> <span class="nc">SomeClass</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s"> dunno what I am doing </span><span class="sh">"""</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="k">pass</span>
</code></pre></div></div>

<h3 id="yaml">YAML</h3>

<p>You can also render some yaml, like this <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Welcome to Jekyll!</span>
<span class="c1">#</span>
<span class="c1"># This config file is meant for settings that affect your whole blog, values</span>
<span class="c1"># which you are expected to set up once and rarely edit after that. If you find</span>
<span class="c1"># yourself editing this file very often, consider using Jekyll's data files</span>
<span class="c1"># feature for the data you need to update frequently.</span>
<span class="c1">#</span>
<span class="c1"># This file, "_config.yml" is *NOT* reloaded automatically when you use</span>
<span class="c1"># 'bundle exec jekyll serve'. If you change this file, please restart the server process.</span>

<span class="c1"># Site settings</span>
<span class="c1"># These are used to personalize your new site. If you look in the HTML files,</span>
<span class="c1"># you will see them accessed via Type on Strap, , and so on.</span>
<span class="c1"># You can create any custom variable you would like, and they will be accessible</span>
<span class="c1"># in the templates via .</span>

<span class="c1"># SITE CONFIGURATION</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/Type-on-Strap"</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">https://sylhare.github.io"</span>

<span class="c1"># THEME-SPECIFIC CONFIGURATION</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Type on Strap</span>                                    <span class="c1"># site's title</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">A</span><span class="nv"> </span><span class="s">website</span><span class="nv"> </span><span class="s">with</span><span class="nv"> </span><span class="s">blog</span><span class="nv"> </span><span class="s">posts</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">pages"</span>      <span class="c1"># used by search engines</span>
<span class="na">avatar</span><span class="pi">:</span> <span class="s">assets/img/triangle.png</span>                         <span class="c1"># Empty for no avatar in navbar</span>
<span class="na">favicon</span><span class="pi">:</span> <span class="s">assets/favicon.ico</span>                             <span class="c1"># Icon displayed in the tab</span>

<span class="na">remote_theme</span><span class="pi">:</span> <span class="s">sylhare/Type-on-Strap</span>                     <span class="c1"># If using as a remote_theme in github</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Highlight" /><category term="Markdown" /><summary type="html"><![CDATA[Let’s demo some code snippet, with some mermaid diagrams. Because if you put some code in your blog, you would at least make it: Searchable Good-looking]]></summary></entry><entry><title type="html">Sample post</title><link href="http://localhost:4000/Type-on-Strap/2019/06/30/sample-post.html" rel="alternate" type="text/html" title="Sample post" /><published>2019-06-30T00:00:00+09:00</published><updated>2019-06-30T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/2019/06/30/sample-post</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/2019/06/30/sample-post.html"><![CDATA[<p>Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. 
Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. 
<!--more-->
Donec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem.</p>

<ul>
  <li>Consectetur adipiscing elit</li>
  <li>Donec a diam lectus</li>
  <li>Sed sit amet ipsum mauris</li>
</ul>

<p>Ut turpis felis, pulvinar a semper sed, adipiscing id dolor. Pellentesque auctor nisi id magna consequat sagittis. Curabitur dapibus enim sit amet elit pharetra tincidunt feugiat nisl imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros. Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.</p>

<p>Nunc diam velit, adipiscing ut tristique vitae, sagittis vel odio. Maecenas convallis ullamcorper ultricies. Curabitur ornare, ligula <em>semper consectetur sagittis</em>, nisi diam iaculis velit, id fringilla sem nunc vel mi. Nam dictum, odio nec pretium volutpat, arcu ante placerat erat, non tristique elit urna et turpis. Quisque mi metus, ornare sit amet fermentum et, tincidunt et orci. Fusce eget orci a orci congue vestibulum.</p>

<div class="row">
    <figure>
        
        <div style="flex: 100.0%">
            <img class="single" src="/Type-on-Strap/assets/img/pexels/travel.jpeg" alt="travel.jpeg" />
        </div>
        
        
        <figcaption class="caption-style">A relaxing image illustrating the content</figcaption>
        
    </figure>
</div>

<p>Ut dolor diam, elementum et vestibulum eu, porttitor vel elit. Curabitur venenatis pulvinar tellus gravida ornare. Sed et erat faucibus nunc euismod ultricies ut id justo. Nullam cursus suscipit nisi, et ultrices justo sodales nec. Fusce venenatis facilisis lectus ac semper. Aliquam at massa ipsum. Quisque bibendum purus convallis nulla ultrices ultricies. Nullam aliquam, mi eu aliquam tincidunt, purus velit laoreet tortor, viverra pretium nisi quam vitae mi. Fusce vel volutpat elit. Nam sagittis nisi dui.</p>

<blockquote>
  <p>Suspendisse lectus leo, consectetur in tempor sit amet, placerat quis neque</p>
</blockquote>

<p>Etiam luctus porttitor lorem, sed suscipit est rutrum non. Curabitur lobortis nisl a enim congue semper. Aenean commodo ultrices imperdiet. Vestibulum ut justo vel sapien venenatis tincidunt.</p>

\[\Theta \ne \Gamma\]

<p>Phasellus eget dolor sit amet ipsum dapibus condimentum vitae quis lectus. Aliquam ut massa in turpis dapibus convallis. Praesent elit lacus, vestibulum at malesuada et, ornare et est. Ut augue nunc, sodales ut euismod non, adipiscing vitae orci<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>. Mauris ut placerat justo. Mauris in ultricies enim. Quisque nec est eleifend nulla ultrices egestas quis ut quam. Donec sollicitudin lectus a mauris pulvinar id aliquam urna cursus. Cras quis ligula sem, vel elementum mi. Phasellus non ullamcorper urna.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">

      <p><span class="cit-authors">John Smith</span>, <span class="cit-title">A Title About Citations</span> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="A Tag" /><category term="Katex" /><summary type="html"><![CDATA[Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur.]]></summary></entry><entry><title type="html">Color Post</title><link href="http://localhost:4000/Type-on-Strap/example/2019/05/18/color-post.html" rel="alternate" type="text/html" title="Color Post" /><published>2019-05-18T00:00:00+09:00</published><updated>2019-05-18T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/example/2019/05/18/color-post</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/example/2019/05/18/color-post.html"><![CDATA[<h1 id="what-a-colorful-post">What a colorful post!</h1>

<p>This is an idea that came from <a href="https://github.com/xukimseven/HardCandy-Jekyll">xukimseven/HardCandy-Jekyll</a> 
looking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap.</p>

<p>You can go fork and star <em>HardCandy-Jekyll</em> too! 😉</p>

<!--more-->

<h2 id="how-does-it-work">How does it work?</h2>

<p>Basically you need to add just one thing, the color:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Color Post</span>
<span class="na">color</span><span class="pi">:</span> <span class="s">brown</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>It can either be a html color like <code class="language-plaintext highlighter-rouge">brown</code> (which look like red to me). Or with the rgb:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Color Post</span>
<span class="na">color</span><span class="pi">:</span> <span class="s">rgb(165,42,42)</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>The background used is <code class="language-plaintext highlighter-rouge">lineart.png</code> from <a href="https://github.com/xukimseven">xukimseven</a> you can edit it in the config file. 
If you want another one, put it in <code class="language-plaintext highlighter-rouge">/assets/img</code> as well.</p>

<blockquote>
  <p>⚠️ It’s a bit hacking the css in the <code class="language-plaintext highlighter-rouge">post.html</code></p>
</blockquote>]]></content><author><name>Sylhare</name></author><category term="Example" /><category term="Test" /><category term="Color" /><summary type="html"><![CDATA[What a colorful post! This is an idea that came from xukimseven/HardCandy-Jekyll looking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap. You can go fork and star HardCandy-Jekyll too! 😉]]></summary></entry><entry><title type="html">Feature images</title><link href="http://localhost:4000/Type-on-Strap/example/2018/10/29/feature-images.html" rel="alternate" type="text/html" title="Feature images" /><published>2018-10-29T00:00:00+09:00</published><updated>2018-10-29T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/example/2018/10/29/feature-images</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/example/2018/10/29/feature-images.html"><![CDATA[<p>Hopefully you will find enough information about how to set images in your blog here.
This is an example of a post which includes a feature image specified in the front matter of the post. 
The feature image spans the full-width of the page, and is shown with the title on permalink pages:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">feature-img</span><span class="pi">:</span> <span class="s2">"</span><span class="s">assets/img/feature-img/desk-messy.jpeg"</span>
<span class="na">thumbnail</span><span class="pi">:</span> <span class="s2">"</span><span class="s">assets/img/thumbnails/feature-img/desk-messy.jpeg"</span> 
</code></pre></div></div>

<p>You can also use a thumbnail, a smaller version of the same image to improve loading of the page.
The thumbnail will also be used when you share your article on other platform (linkedin, whatsapp, facebook, …).</p>

<blockquote>
  <ul>
    <li>And now it is working</li>
  </ul>
</blockquote>

<p>You can also add images aligned in your post using the <code class="language-plaintext highlighter-rouge">aligner</code> include.
Make sure to separate all of the image path from in a string separated with <code class="language-plaintext highlighter-rouge">,</code>.
It by default look into <code class="language-plaintext highlighter-rouge">assets/img/</code> so give the path from there, example:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"pexels/book-glass.jpeg,triangle.png"</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    <figure>
        
        <div class="column">
            <img src="/Type-on-Strap/assets/img/pexels/book-glass.jpeg" alt="book-glass.jpeg" />
        </div>
        
        <div class="column">
            <img src="/Type-on-Strap/assets/img/feature-img/desk-messy.jpeg" alt="desk-messy.jpeg" />
        </div>
        
        
    </figure>
</div>

<p>Here you have two images side by side, but you can set more and set the amount per columns 
(by specifying the number of columns or let it be automatic using <code class="language-plaintext highlighter-rouge">"auto"</code>):</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"portfolio/cabin.png,portfolio/cake.png,portfolio/circus.png"</span> <span class="n">column</span><span class="o">=</span><span class="mi">3</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    <figure>
        
        <div style="flex: 33.333333333333336%">
            <img src="/Type-on-Strap/assets/img/portfolio/cabin.png" alt="cabin.png" />
        </div>
        
        <div style="flex: 33.333333333333336%">
            <img src="/Type-on-Strap/assets/img/portfolio/cake.png" alt="cake.png" />
        </div>
        
        <div style="flex: 33.333333333333336%">
            <img src="/Type-on-Strap/assets/img/portfolio/circus.png" alt="circus.png" />
        </div>
        
        
    </figure>
</div>

<p>it also works with only one images, it is made to display it smaller than normally.
However you can just use the Markdown way of doing it to get the image normal sized and centered.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># Markdown way (bigger)</span>
<span class="o">!</span><span class="p">[</span><span class="no">Travel</span><span class="p">]({{</span> <span class="s2">"/assets/img/pexels/computer.jpeg"</span> <span class="o">|</span> <span class="n">relative_url</span><span class="p">}})</span>
<span class="c1"># Aligner with only One (50% of width)</span>
<span class="p">{</span><span class="sx">% include </span><span class="n">aligner</span><span class="p">.</span><span class="nf">html</span> <span class="n">images</span><span class="o">=</span><span class="s2">"pexels/computer.jpeg"</span> <span class="o">%</span><span class="p">}</span></code></pre></figure>

<div class="row">
    <figure>
        
        <div class="column">
            <img class="single" src="/Type-on-Strap/assets/img/pexels/computer.jpeg" alt="computer.jpeg" />
        </div>
        
        
    </figure>
</div>]]></content><author><name></name></author><category term="Example" /><category term="Test" /><category term="Image" /><summary type="html"><![CDATA[Hopefully you will find enough information about how to set images in your blog here. This is an example of a post which includes a feature image specified in the front matter of the post. The feature image spans the full-width of the page, and is shown with the title on permalink pages:]]></summary></entry><entry><title type="html">Bootstrap</title><link href="http://localhost:4000/Type-on-Strap/demo/2017/09/17/Use-Bootstrap.html" rel="alternate" type="text/html" title="Bootstrap" /><published>2017-09-17T00:00:00+09:00</published><updated>2017-09-17T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/demo/2017/09/17/Use-Bootstrap</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/demo/2017/09/17/Use-Bootstrap.html"><![CDATA[<p>This theme is compatible with Bootstrap if you choose to use it in your pages or posts.
Here is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.</p>

<h2 id="use-bootstrap">Use bootstrap</h2>

<p>Add some custom Bootstrap in the custom layout!</p>

<p><img src="https://startbootstrap.com/assets/img/sb-logo.svg" alt="startbootstrap" width="500" /></p>

<h3 id="snippet-example">Snippet example</h3>

<p>If you are new to Bootstrap you can  always check the <a href="https://getbootstrap.com/docs/4.1/getting-started/introduction/">documentation</a>.<br />
Here is an example from <a href="https://startbootstrap.com/snippets/portfolio-two-column">startbootstrap.com</a>.</p>

<!-- Page Content -->
<div class="container">

  <div class="row">
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project One</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Two</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Three</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Four</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Five</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.</p>
        </div>
      </div>
    </div>
    <div class="col-lg-6 mb-4">
      <div class="card h-100">
        <a href="#"><img class="card-img-top" src="http://placehold.it/700x400" alt="" /></a>
        <div class="card-body">
          <h4 class="card-title">
            <a href="#">Project Six</a>
          </h4>
          <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.</p>
        </div>
      </div>
    </div>
  </div>
  <!-- /.row -->

</div>
<!-- /.container -->

<h3 id="mix-it-with-markdown">Mix it with Markdown</h3>

<p>All the above was custom HTML with Bootstrap.
You can also mix it up with some markdown.</p>

<p>You can use the bootstrap’s build in javascript API to control your event.
Here is a code snippet for the <a href="https://getbootstrap.com/docs/4.0/getting-started/javascript/">documentation</a>:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">#myModal</span><span class="dl">'</span><span class="p">).</span><span class="nf">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">show.bs.modal</span><span class="dl">'</span><span class="p">,</span> <span class="nf">function </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">data</span><span class="p">)</span> <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nf">preventDefault</span><span class="p">()</span> <span class="c1">// stops modal from being shown</span>
<span class="p">})</span>
</code></pre></div></div>

<p>That’s just for demo though, you would need to properly integrate your javascript in your page.
Usually you would put any custom javascript script in the <em>assets</em> folder under js and reference it in your page from there.</p>

<p>So try it out using the <code class="language-plaintext highlighter-rouge">bootstrap: true</code> flag! 😉</p>]]></content><author><name></name></author><category term="Demo" /><category term="Test" /><summary type="html"><![CDATA[This theme is compatible with Bootstrap if you choose to use it in your pages or posts. Here is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.]]></summary></entry><entry><title type="html">Mermaid Chart</title><link href="http://localhost:4000/Type-on-Strap/2016/12/03/Mermaid.html" rel="alternate" type="text/html" title="Mermaid Chart" /><published>2016-12-03T00:00:00+09:00</published><updated>2016-12-03T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/2016/12/03/Mermaid</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/2016/12/03/Mermaid.html"><![CDATA[<h2 id="mermaid">Mermaid</h2>

<p>Diagrams with mermaid, make sure it is enabled in the <code class="language-plaintext highlighter-rouge">_config.yml</code>.
Here is a simple example:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- To generate a diagram --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"mermaid"</span><span class="nt">&gt;</span>
sequenceDiagram
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<blockquote>
  <p>💡 Now render also work with the GitHub markdown highlight.</p>
</blockquote>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">```</span><span class="nl">mermaid
</span><span class="sb">sequenceDiagram
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!</span>
<span class="p">```</span></code></pre></figure>

<p>That will be rendered into this:</p>

<div class="row">
    <figure>
        
        <div class="column">
            <img class="single" src="/Type-on-Strap/assets/img/mermaid-example.png" alt="mermaid-example.png" />
        </div>
        
        
    </figure>
</div>

<p>You can also go with more complex features and diagrams from the <a href="https://mermaid-js.github.io/mermaid/">documentation</a>,
and try it out with the <a href="https://mermaid.live/">live editor</a>.</p>

<h3 id="sequencediagram">SequenceDiagram</h3>

<div class="mermaid">
sequenceDiagram
    participant Alice
    participant Bob
    Alice-&gt;&gt;John: Hello John, how are you?
    loop Healthcheck
        John-&gt;&gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts prevail!
    John--&gt;&gt;Alice: Great!
    John-&gt;&gt;Bob: How about you?
    Bob--&gt;&gt;John: Jolly good!
</div>

<h3 id="flow">Flow</h3>

<pre><code class="language-mermaid">flowchart TD
    A[Christmas] --&gt;|Get money| B(Go shopping)
    B --&gt; C{Let me think}
    C --&gt;|One| D[Laptop]
    D ~~~ E
    C --&gt;|Two| E[iPhone]
    C --&gt;|Three| F[fa:fa-car Car]
    %% Grinch
</code></pre>

<h3 id="class">Class</h3>

<pre><code class="language-mermaid">classDiagram
    Animal &lt;|-- Duck
    Animal &lt;|-- Fish
    Animal &lt;|-- Zebra
    Animal : +int age
    Animal : +String gender
    Animal: +isMammal()
    Animal: +mate()
    class Duck{
      +String beakColor
      +swim()
      +quack()
    }
    class Fish{
      -int sizeInFeet
      -canEat()
    }
    class Zebra{
      +bool is_wild
      +run()
    }
</code></pre>

<h3 id="state">State</h3>

<pre><code class="language-mermaid">stateDiagram-v2
    [*] --&gt; Still
    Still --&gt; [*]
    Still --&gt; Moving
    Moving --&gt; Still
    Moving --&gt; Crash
    Crash --&gt; [*]
</code></pre>

<h3 id="er">ER</h3>

<pre><code class="language-mermaid">erDiagram
    CUSTOMER }|..|{ DELIVERY-ADDRESS : has
    CUSTOMER ||--o{ ORDER : places
    CUSTOMER ||--o{ INVOICE : "liable for"
    DELIVERY-ADDRESS ||--o{ ORDER : receives
    INVOICE ||--|{ ORDER : covers
    ORDER ||--|{ ORDER-ITEM : includes
    PRODUCT-CATEGORY ||--|{ PRODUCT : contains
    PRODUCT ||--o{ ORDER-ITEM : "ordered in"
</code></pre>

<h3 id="gantt">Gantt</h3>

<pre><code class="language-mermaid">gantt
    title A Gantt Diagram
    dateFormat  YYYY-MM-DD
    section Section
    A task           :a1, 2014-01-01, 30d
    Another task     :after a1  , 20d
    section Another
    Task in sec      :2014-01-12  , 12d
    another task      : 24d
</code></pre>

<h3 id="user-journey">User Journey</h3>

<pre><code class="language-mermaid">journey
    title My working day
    section Go to work
      Make tea: 5: Me
      Go upstairs: 3: Me
      Do work: 1: Me, Cat
    section Go home
      Go downstairs: 5: Me
      Sit down: 3: Me
</code></pre>

<h3 id="git">Git</h3>

<pre><code class="language-mermaid">gitGraph
    commit
    commit
    branch develop
    checkout develop
    commit
    commit
    checkout main
    merge develop
    commit
    commit
</code></pre>

<h3 id="pie">Pie</h3>

<pre><code class="language-mermaid">pie title Pets adopted by volunteers
    "Dogs" : 386
    "Cats" : 85
    "Rats" : 15
</code></pre>

<h3 id="mindmap">Mindmap</h3>

<pre><code class="language-mermaid">mindmap
  root((mindmap))
    Origins
      Long history
      ::icon(fa fa-book)
      Popularisation
        British popular psychology author Tony Buzan
    Research
      On effectivness&lt;br/&gt;and features
      On Automatic creation
        Uses
            Creative techniques
            Strategic planning
            Argument mapping
    Tools
      Pen and paper
      Mermaid
</code></pre>

<h3 id="quadrantchart">QuadrantChart</h3>

<pre><code class="language-mermaid">quadrantChart
    title Reach and engagement of campaigns
    x-axis Low Reach --&gt; High Reach
    y-axis Low Engagement --&gt; High Engagement
    quadrant-1 We should expand
    quadrant-2 Need to promote
    quadrant-3 Re-evaluate
    quadrant-4 May be improved
    Campaign A: [0.3, 0.6]
    Campaign B: [0.45, 0.23]
    Campaign C: [0.57, 0.69]
    Campaign D: [0.78, 0.34]
    Campaign E: [0.40, 0.34]
    Campaign F: [0.35, 0.78]
</code></pre>

<h3 id="xychart">XYChart</h3>

<pre><code class="language-mermaid">    xychart-beta
    title "Sales Revenue"
    x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]
    y-axis "Revenue (in $)" 4000 --&gt; 11000
    bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]
    line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]
</code></pre>]]></content><author><name></name></author><category term="Mermaid" /><summary type="html"><![CDATA[Mermaid]]></summary></entry><entry><title type="html">Markdown and HTML</title><link href="http://localhost:4000/Type-on-Strap/syntax/2014/11/28/markdown-and-html.html" rel="alternate" type="text/html" title="Markdown and HTML" /><published>2014-11-28T00:00:00+09:00</published><updated>2014-11-28T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/syntax/2014/11/28/markdown-and-html</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/syntax/2014/11/28/markdown-and-html.html"><![CDATA[<p>Jekyll supports the use of <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a> with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.</p>

<h2 id="table-of-content">Table of content</h2>

<!-- To be placed at the beginning of the post, it is where the table of content will be generated -->
<ul>
  <li>TOC</li>
  <li>You need to put this at the beginning of the page where you want the table of content to be displayed</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* TOC
{:toc}
</code></pre></div></div>

<p>It will then render the markdown and html titles (lines that begins with <code class="language-plaintext highlighter-rouge">#</code> or using the <code class="language-plaintext highlighter-rouge">&lt;h1&gt;&lt;/h1&gt;</code> tages)</p>

<h2 id="title">Title</h2>

<h3 id="subtitle">Subtitle</h3>

<p>Tables have also been extended from Markdown:</p>

<table>
  <thead>
    <tr>
      <th>First Header</th>
      <th>Second Header</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Content Cell</td>
      <td>Content Cell</td>
    </tr>
    <tr>
      <td>Content Cell</td>
      <td>Content Cell</td>
    </tr>
  </tbody>
</table>

<p>Here’s an example of an image, which is included using Markdown:</p>

<p><img src="/Type-on-Strap/assets/img/pexels/book-glass.jpeg" alt="Image of a glass on a book" /></p>

<p>This is another example of list:</p>

<ul>
  <li>list of things
    <ol>
      <li>Sub list</li>
      <li>of Other things</li>
      <li>with numbers</li>
    </ol>
  </li>
  <li>And many more
    <ul>
      <li>Sub sub list
        <ul>
          <li>can go on …
            <ul>
              <li>and on …
                <ul>
                  <li>and on !</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>That’s it.</li>
    </ul>
  </li>
</ul>

<h3 id="other-subtitle">Other subtitle</h3>

<p>Highlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default.</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// count to ten</span>
<span class="k">for </span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// count to twenty</span>
<span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">while </span><span class="p">(</span><span class="nx">j</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">j</span><span class="o">++</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span>
<span class="p">}</span></code></pre></figure>

<h3 id="math">Math</h3>

<p>Type on Strap uses KaTeX to display maths. Equations such as \(S_n = a \times \frac{1-r^n}{1-r}\) can be displayed inline.</p>

<p>Alternatively, they can be shown on a new line:</p>

\[f(x) = \int \frac{2x^2+4x+6}{x-2}\]

<p>And in your markdown file:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$$ f(x) = <span class="se">\i</span>nt <span class="se">\f</span>rac{2x^2+4x+6}{x-2} $$
</code></pre></div></div>

<h3 id="expandable-content">Expandable content</h3>

<p>Click on the expandable content to display it:</p>

<details>
    <summary>Click here!</summary>
    Now you see me
</details>

<p>And in your markdown file:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;details&gt;</span>
    <span class="nt">&lt;summary&gt;</span>Click here!<span class="nt">&lt;/summary&gt;</span>
    Now you see me
<span class="nt">&lt;/details&gt;</span>
</code></pre></div></div>]]></content><author><name>Rohan Chandra</name></author><category term="Syntax" /><category term="Katex" /><category term="Markdown" /><summary type="html"><![CDATA[Jekyll supports the use of Markdown with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.]]></summary></entry><entry><title type="html">What’s your title</title><link href="http://localhost:4000/Type-on-Strap/2014/11/27/whats-your-title.html" rel="alternate" type="text/html" title="What’s your title" /><published>2014-11-27T00:00:00+09:00</published><updated>2014-11-27T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/2014/11/27/whats-your-title</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/2014/11/27/whats-your-title.html"><![CDATA[<p>This is an example of a post which includes a feature image that has a
text, where you don’t want to redisplay the title.
Mind your image size in order for the text to be displayed where you want it to.
The only limit is your imagination.</p>

<p>Here is how the yaml looks inside the post:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">What's your title</span>
<span class="na">hide_title</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">feature-img</span><span class="pi">:</span> <span class="s">assets/img/feature-img/story.jpeg</span>
<span class="na">author</span><span class="pi">:</span> <span class="s">mhagnumdw</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">Test</span><span class="pi">,</span> <span class="nv">Lorem</span><span class="pi">]</span>
</code></pre></div></div>

<p>You may wonder, why is there a title when you are not actually displaying it. <br />
Well that’s due to some jekyll limitation:</p>

<blockquote>
  <p>You <strong>can’t</strong> set the <strong>title</strong> to the <strong>empty string</strong></p>
</blockquote>

<p>The title is used elsewhere than inside the post, for example in the blog page that list this post.
An empty title would break those pages and possibly prevents jekyll to render your blog.</p>]]></content><author><name>Mhagnumdw</name></author><category term="Test" /><category term="Image" /><summary type="html"><![CDATA[This is an example of a post which includes a feature image that has a text, where you don’t want to redisplay the title. Mind your image size in order for the text to be displayed where you want it to. The only limit is your imagination.]]></summary></entry><entry><title type="html">The Real Lorem Ipsum</title><link href="http://localhost:4000/Type-on-Strap/demo/2014/11/26/lorem-ipsum.html" rel="alternate" type="text/html" title="The Real Lorem Ipsum" /><published>2014-11-26T00:00:00+09:00</published><updated>2014-11-26T00:00:00+09:00</updated><id>http://localhost:4000/Type-on-Strap/demo/2014/11/26/lorem-ipsum</id><content type="html" xml:base="http://localhost:4000/Type-on-Strap/demo/2014/11/26/lorem-ipsum.html"><![CDATA[<h2 id="lorem-ipsum">Lorem Ipsum</h2>

<p>from <em>“de Finibus Bonorum et Malorum”</em> written by Cicero in 45 BC.
 <!--more-->
Find out more on <a href="https://www.lipsum.com/">lipsum.com</a>. And if you like colors, check out the <a href="https://www.w3schools.com/colors/colors_trends.asp">http color trends</a> from w3schools.</p>

<h3 id="the-standard-lorem-ipsum-passage-since-1500s">The standard Lorem Ipsum passage (since 1500s)</h3>

<p>“Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.”</p>

<h3 id="section-11032">Section 1.10.32</h3>

<h4 id="latin">Latin</h4>
<p>“Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?”</p>

<h4 id="translation-by-h-rackham-1914">Translation by H. Rackham (1914)</h4>
<p>“But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?”</p>

<h3 id="section-11033">Section 1.10.33</h3>

<h4 id="latin-1">Latin</h4>

<p>“At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.”</p>

<h4 id="translation-by-h-rackham-1914-1">Translation by H. Rackham (1914)</h4>

<p>“On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.”</p>]]></content><author><name></name></author><category term="Demo" /><category term="Image" /><category term="Color" /><summary type="html"><![CDATA[Lorem Ipsum from “de Finibus Bonorum et Malorum” written by Cicero in 45 BC.]]></summary></entry></feed>